# -*- mode: ruby -*-
# vi: set ft=ruby :

# Require JSON module
require 'json'
# Read JSON file with config details
#guests = JSON.parse(File.read(File.join(File.dirname(__FILE__), 'config.json')))

Vagrant.configure("2") do |config|
  #config.vagrant.plugins = ["vagrant-hostmanager", "vagrant-vbguest"]

  config.vm.box_check_update = true
  config.vm.boot_timeout = 420
  # disable update guest additions
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  # enable ssh agent forwarding
  config.ssh.forward_agent = true
  # use the standard vagrant ssh key
  config.ssh.insert_key = false
  # disable guest additions
  #config.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true

  $msg = <<-'MSG'
  --------------------------------------------------------
  `vagrant ssh controller` to connect to controller.
  Once connected:
  `cd /vagrant` to change to Vagrant project folder.
  `source chapter14.rc` to install dependencies into
    a Python3 virtualenv.
  
  From here Ansible will have access to playbooks within
  the project.
  --------------------------------------------------------
  MSG

  config.vm.define "controller", primary: true do |controller|
    controller.vm.box = "generic/rhel8"
    controller.vm.network "private_network", ip: "192.168.56.10"
    controller.vm.hostname = "controller"
    controller.vm.boot_timeout = 600
    # 'mount_options' used due to 'ansible.cfg' being in world-writable directory:
    # https://docs.ansible.com/ansible/devel/reference_appendices/config.html#cfg-in-world-writable-dir
    #controller.vm.synced_folder ".", "/vagrant", mount_options: ["dmode=775"]
    controller.vm.synced_folder ".", "/vagrant"
    controller.vm.post_up_message = $msg

    controller.vm.provider "virtualbox" do |vb|
      vb.name ="controller"
      vb.memory = "2048"
      vb.cpus = "2"
    end

    controller.vm.provision "shell" do |provision|
      provision.path = "provision_controller.sh"
      provision.privileged = false
    end

#     $script = <<-SCRIPT
#     pip3 install --upgrade pip
#     pip3 install wheel
#     pip3 install requests==2.31.0
#     SCRIPT

#     controller.vm.provision "shell", inline: $script, privileged: false

#     # Generate a key pair if one does not exist, and copy public key to shared directory on host machine.
#     # Nodes will pull this key for authentication.
#     # From: https://github.com/jminck/vagrant-ansible-lab/blob/master/Vagrantfile
#     controller.vm.provision :shell, :inline => <<'EOF'
# if [ ! -f "/home/vagrant/.ssh/id_rsa" ]; then
# ssh-keygen -t rsa -N "" -f /home/vagrant/.ssh/id_rsa
# fi
# cp /home/vagrant/.ssh/id_rsa.pub /vagrant/.vagrant/control.pub

# chown -R vagrant:vagrant /home/vagrant/.ssh
# EOF
  end
end
